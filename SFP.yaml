version: '3.8'
services:
  db:
    image: postgres:15.1-alpine
    container_name: sfp-db-dev
    volumes:
      - sfp_postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  # web:
  #   # build: 
  #   #   context: ./backend
  #   #   dockerfile: Dockerfile
  #   image: kaspar.azurecr.io/sfp_backend:1.0
  #   container_name: sfp_backend
  #   # command: python /app/manage.py runserver 0.0.0.0:8000
  #   command: gunicorn sfp.wsgi:application --bind 0.0.0.0:8000
  #   volumes:
  #     - /app
  #     - sfp_static_files:/app/static/
  #   restart:
  #     always
  #   expose:
  #     - 8000
  #   # ports:
  #   #   - "8001:8000"
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - db
  #   links:
  #     - db:db
    
  # web_migration:
  #   image: kaspar.azurecr.io/sfp_backend:1.0
  #   # build: 
  #   #   context: .
  #   #   dockerfile: Dockerfile.backend
  #   command: python /app/manage.py migrate
  #   volumes:
  #     - sfp_static_files:/app
  #   # expose:
  #   #   - 8000
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - web

  # frontend:
  #   image: kaspar.azurecr.io/sfp_frontend:1.0
  #   build:
  #     # context: .
  #     # dockerfile: Dockerfile.frontend.production 
  #     args:
  #         REACT_APP_BACKEND_URL: 'http://localhost:8000'
  #   container_name: sfp_frontend
  #   # command: npm start
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     - web
      

  pgadmin:
    image: dpage/pgadmin4
    container_name: sfp-pgadmin-dev #you can change this
    depends_on:
      - db
    ports:
      - "5050:80"
    env_file:
      - ./.env
    restart: always

  # nginx:
  #   # build: 
  #   #   context: ./nginx
  #   image: kaspar.azurecr.io/django-nginx
  #   container_name: sfp_backend_nginx
  #   volumes:
  #     - sfp_static_files:/app/static/
  #   ports:
  #     - 8000:80
  #   depends_on:
  #     - web
  #   links:
  #     - web:web

volumes:
  sfp_postgres_data:
  sfp_static_files: